{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","React","createElement","className","Description","Artist","props","htmlFor","type","id","name","placeholder","value","artist","onChange","event","change","target","Title","title","Song","useState","setArtist","setTitle","Search","lyrics","setLyrics","alreadyLoaded","setAlreadyLoaded","errore","setErrore","displayInfo","e","console","log","fetch","then","res","json","result","error","onClick","class","message","Credit","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb0ba6f7.chunk.js","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Description />\n      <Song />\n      <Credit />\n    </div>\n  );\n}\n\nfunction Header(){\n  return React.createElement('h1', {className: 'title-header' }, 'trovalyric');\n}\n\nfunction Description(){\n  return (\n    <p className=\"description\">\n      Straight up lyrics.      \n    </p>\n  )\n}\n\nfunction Artist(props){\n  return(\n    <div>\n      <label htmlFor=\"artist\" className=\"label\" >Artist</label>\n      <br />\n      <input type=\"text\" id=\"artist\" name=\"artist\" className=\"text-box\" placeholder=\"   Enter artist name here...\" value={props.artist} onChange={(event) => props.change(event.target.value)}/>\n    </div>\n  )\n}\n\nfunction Title(props){\n  return(\n    <div>\n      <label htmlFor=\"title\" className=\"label\" id=\"title-label\">Title</label>\n      <br />\n      <input type=\"text\" id=\"title\" name=\"title\" className=\"text-box\" placeholder=\"   Enter song title here...\" value={props.title} onChange={(event) => props.change(event.target.value)}/>\n    </div>\n  )\n}\n\nfunction Song(){\n  const [artist, setArtist] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n\n\n  return(\n    <>\n      <form className=\"form\">\n          <Artist artist={ artist } change ={setArtist}/>\n          <Title title={ title } change={setTitle}/>\n      </form>\n      <Search artist={ artist } title={ title }/>\n    </>\n  )\n}\n\nfunction Search(props){\n\n  const [artist, setArtist] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [lyrics, setLyrics] = React.useState(\"\");\n  const [alreadyLoaded, setAlreadyLoaded] = React.useState(false);\n  const [errore, setErrore] = React.useState(null);\n  \n  function displayInfo(e){\n    console.log(props.artist + \" \" + props.title);\n    setAlreadyLoaded(false)\n    setArtist(props.artist);\n    setTitle(props.title);\n    fetch(\"https://api.lyrics.ovh/v1/\"+props.artist+\"/\"+props.title)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setAlreadyLoaded(true);\n          setLyrics(result.lyrics);\n          console.log(lyrics)\n        },\n        (error) => {\n          setAlreadyLoaded(true);\n          setErrore(error)\n          setLyrics(\"sorry, couldn't find lyrics for this song\");\n        }\n      );\n  }\n  if(artist===\"\" && title===\"\"){  \n    return(\n      <>\n        <button className=\"search-button\" onClick={displayInfo}>\n          Search\n        </button>\n        <h3>\n        </h3>\n        <p>\n        </p>\n      </>\n    )\n  }else if(errore){\n    if(artist !== \"\" && title !== \"\"){\n      if(!alreadyLoaded){\n        return(\n          <>\n            <button className=\"search-button\" onClick={displayInfo}>\n              Search\n            </button>\n            <h3 className=\"song-info\">\n              {title + \" by \" + artist}\n            </h3>\n            <p>\n              Looking for your song...\n            </p>\n            <div class=\"spinner\"/>\n          </>\n        )\n      }else{\n        return(\n          <>\n            <button className=\"search-button\" onClick={displayInfo}>\n              Search\n            </button>\n            <h3 className=\"song-info\">\n              {title + \" by \" + artist}\n            </h3>\n            <p className=\"lyrics\">\n              {lyrics}\n            </p>\n          </>\n        )\n      }\n    } else{\n      return(\n        <>\n          <button className=\"search-button\" onClick={displayInfo}>\n            Search\n          </button>\n          <h3 className=\"song-info\">\n            Sorry, there's been an error: {errore.message}\n          </h3>\n          <p>\n          </p>\n        </>\n      )\n    }\n  } else if(!alreadyLoaded){\n    return(\n      <>\n        <button className=\"search-button\" onClick={displayInfo}>\n          Search\n        </button>\n        <h3 className=\"song-info\">\n          {title + \" by \" + artist}\n        </h3>\n        <p>\n          Looking for your song...\n        </p>\n        <div class=\"spinner\"/>\n      </>\n    )\n  } else{\n    return(\n      <>\n        <button className=\"search-button\" onClick={displayInfo}>\n          Search\n        </button>\n        <h3 className=\"song-info\">\n          {title + \" by \" + artist}\n        </h3>\n        <p className=\"lyrics\">\n          {lyrics}\n        </p>\n      </>\n    )\n  }\n  \n}\n\nfunction Credit(){\n  return(\n    <footer className=\"credit\">\n      <p>\n        Made using the <a target=\"_blank\" href=\"https://lyricsovh.docs.apiary.io/#\">lyrics.ovh API</a>\n      </p>\n    </footer>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}